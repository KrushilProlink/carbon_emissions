<!DOCTYPE HTML>
<html>
<head>
    <script type="text/javascript" src="https://cdn.canvasjs.com/canvasjs.min.js"></script>

    <style>
        body {
            color: black;
            background-color: white;
            font-family: Arial, sans-serif;
        }

        .container {
            width: 100%;
            padding: 20px;
            box-sizing: border-box;
        }

        .page {
            margin: 20px;
        }

        .table-container {
            margin: 20px 0;
            width: 100%;
            padding: 0 10px;
            box-sizing: border-box;
        }

        table {
            width: 100%;
            border-collapse: collapse;
            border: 1px solid #ddd;
            margin: 0;
        }

        thead {
            display: table-header-group;
        }

        th,
        td {
            border: 1px solid #ddd;
            padding: 10px;
            text-align: left;
        }

        th {
            background-color: #f4f4f4;
            font-weight: bold;
        }

        #chartContainer .canvasjs-chart-credit {
            display: none;
        }

        .chart-title {
            text-decoration: underline;
            font-size: 30px;
            text-align: center;
            margin-bottom: 20px;
        }
    </style>

    <script type="text/javascript">
        window.onload = function () {
            const allEventsEmissions = <% - JSON.stringify(allEventsEmissions) %>;
            // const allEventsEmissions = [
            //     {
            //         f2fEventTotalEmission: "4382.00",
            //         // virtualEventTotalEmission: "25.00",
            //         prEventTotalEmission: "20405.47",
            //         digitalCampaignTotalEmission: "22434.03",
            //         activity: "A1 - 2024-09-30",
            //     },
            //     {
            //         f2fEventTotalEmission: "29140.31",
            //         // virtualEventTotalEmission: "234.00",
            //         // prEventTotalEmission: "2300.00",
            //         digitalCampaignTotalEmission: "3000.00",
            //         activity: "A2 - 2024-10-02",
            //     },
            // ];

            const eventTypesMap = [
                { name: "F2F Event", color: "rgb(31, 158, 109)", field: "f2fEventTotalEmission" },
                { name: "Outbound Marketing", color: "#ACE1AF", field: "virtualEventTotalEmission" },
                { name: "PR Event", color: "#D0F0C0", field: "prEventTotalEmission" },
                { name: "Digital Campaign", color: "rgb(5, 71, 35)", field: "digitalCampaignTotalEmission" }
            ];

            const eventTypes = [];
            eventTypesMap.forEach(eventType => {
                const exists = allEventsEmissions.some(event => event[eventType.field] !== undefined);
                if (exists) {
                    eventTypes.push(eventType);
                }
            });

            const dataSeries = eventTypesMap.map(eventType => {
                return {
                    type: "column",
                    name: eventType.name,
                    color: eventType.color,
                    showInLegend: true,
                    legendText: eventType.name,
                    dataPoints: allEventsEmissions.map(event => {
                        const value = parseFloat(event[eventType.field]) || 0;
                        return {
                            label: event.activity,
                            y: value,
                            indexLabel: value > 0 ? value.toFixed(2) : "", // Display the label inside the bar
                            indexLabelPlacement: "inside",                // Position label inside the bar
                            indexLabelFontColor: "black",                 // Color of the label
                            toolTipContent: `${eventType.name}<br>Activity: ${event.activity}<br>Total Emissions: ${value.toFixed(2)}`
                        };
                    })
                };
            }).filter(series =>
                series.dataPoints.some(point => point.y > 0)
            );

            var chart = new CanvasJS.Chart("chartContainer", {
                axisY: {
                    title: "Total Emissions (kgCO₂e)",
                    labelFontSize: 20,
                    labelFontColor: "dimGrey"
                },
                axisX: {
                    // labelAngle: -30
                },
                data: dataSeries,
                legend: {
                    cursor: "pointer",
                    horizontalAlign: "center",
                    verticalAlign: "top",
                    fontSize: 10,
                    margin: 20
                },
            });

            chart.render();

            let tableHTML = '<table><thead><tr><th>Activity</th>';
            const headers = new Set();
            allEventsEmissions.forEach(event => {
                eventTypesMap.forEach(eventType => {
                    if (event[eventType.field] !== undefined && parseFloat(event[eventType.field]) > 0) {
                        headers.add(eventType.name);
                    }
                });
            });

            headers.forEach(header => {
                tableHTML += `<th>${header} Emissions</th>`;
            });
            tableHTML += '</tr></thead><tbody>';

            allEventsEmissions.forEach(event => {
                tableHTML += '<tr>';
                tableHTML += `<td>${event.activity}</td>`;
                headers.forEach(header => {
                    const eventType = eventTypesMap.find(type => type.name === header);
                    const value = event[eventType.field] ? parseFloat(event[eventType.field]).toFixed(2) > 0 && parseFloat(event[eventType.field]).toFixed(2) : '';
                    tableHTML += `<td>${value || '-'}</td>`;
                });
                tableHTML += '</tr>';
            });

            tableHTML += '</tbody></table>';
            document.getElementById('tableContainer').innerHTML = tableHTML;
        }
    </script>
</head>

<body>
    <h4>Dear <%= name %>,</h4>
    <p>Thank you for using our <strong>NetZero Platform</strong> to measure the carbon footprint generated by
        your <strong>
            <%= activityName %>
        </strong> activity</p>
    <p>We are pleased to provide you with the carbon footprint report, which details the emissions associated with the
        mentioned activity</p>
    <h2 class="chart-title">Marketing Activity Emissions Comparison</h2>

    <div id="chartContainer" style="height: 400px; width: 90%; margin: auto;"></div>
    <!-- <div id="tableContainer" class="table-container"></div> -->

    <p style="margin-top: 30px;">We deeply value your commitment to sustainability and appreciate your proactive
        approach in understanding and mitigating your environmental impact.</p>
    <p>If you have any questions or need further assistance on how to reduce the carbon emissions from your activity,
        please contact us at <a href="mailto:info@sirat.earth">info@sirat.earth</a>.</p>
    <br />
    <p>Best regards,</p>
    <p style="margin-bottom:0; font-weight: bold;">Team Sirāt</p>

</body>

</html>




<!-- 

<!DOCTYPE HTML>
<html>

<head>
    <script type="text/javascript" src="https://cdn.canvasjs.com/canvasjs.min.js"></script>

    <style>
        body {
            color: black;
            background-color: white;
            font-family: Arial, sans-serif;
        }

        .container {
            width: 100%;
            padding: 20px;
            box-sizing: border-box;
        }

        .page {
            margin: 20px;
        }

        .table-container {
            margin: 20px 0;
            width: 100%;
            padding: 0 10px;
            box-sizing: border-box;
        }

        table {
            width: 100%;
            border-collapse: collapse;
            border: 1px solid #ddd;
            margin: 0;
        }

        thead {
            display: table-header-group;
        }

        th,
        td {
            border: 1px solid #ddd;
            padding: 10px;
            text-align: left;
        }

        th {
            background-color: #f4f4f4;
            font-weight: bold;
        }

        #chartContainer .canvasjs-chart-credit {
            display: none;
        }

        .chart-title {
            text-decoration: underline;
            font-size: 30px;
            text-align: center;
            margin-bottom: 20px;
        }
    </style>

    <script type="text/javascript">
        window.onload = function () {
            const allEventsEmissions = <% - JSON.stringify(allEventsEmissions) %>;

            // const allEventsEmissions = [
            //     {
            //         f2fEventTotalEmission: "4382.00",
            //         // virtualEventTotalEmission: "25.00",
            //         prEventTotalEmission: "20405.47",
            //         digitalCampaignTotalEmission: "22434.03",
            //         activity: "A1 - 2024-09-30",
            //     },
            //     {
            //         f2fEventTotalEmission: "29140.31",
            //         // virtualEventTotalEmission: "234.00",
            //         // prEventTotalEmission: "2300.00",
            //         digitalCampaignTotalEmission: "3000.00",
            //         activity: "A2 - 2024-10-02",
            //     },
            // ];

            const eventTypesMap = [
                { name: "F2F Event", color: "rgb(31, 158, 109)", field: "f2fEventTotalEmission" },
                { name: "Outbound Marketing", color: "#ACE1AF", field: "virtualEventTotalEmission" },
                { name: "PR Event", color: "#D0F0C0", field: "prEventTotalEmission" },
                { name: "Digital Campaign", color: "rgb(5, 71, 35)", field: "digitalCampaignTotalEmission" }
            ];

            const eventTypes = [];

            // Iterate through the event types map and check for existence in allEventsEmissions
            eventTypesMap.forEach(eventType => {
                // Check if any object in the array has the corresponding emission property
                const exists = allEventsEmissions.some(event => event[eventType.field] !== undefined);
                if (exists) {
                    eventTypes.push(eventType);
                }
            });

            // Prepare the dataSeries for the chart
            // const dataSeries = eventTypes.map(eventType => {
            //     return {
            //         type: "column",
            //         name: eventType.name,
            //         color: eventType.color,
            //         showInLegend: true,
            //         legendText: eventType.name,
            //         dataPoints: allEventsEmissions.map(event => {
            //             const value = parseFloat(event[eventType.field]) || 0; // Default to 0 if undefined
            //             return {
            //                 // label: event.activity.split(" - ")[0],
            //                 label: event.activity,
            //                 y: value,
            //                 toolTipContent: `${eventType.name}<br>Activity: ${event.activity}<br>Total Emissions: ${value.toFixed(2)}`
            //             };
            //         })
            //     };
            // });
            const dataSeries = eventTypesMap.map(eventType => {
                return {
                    type: "column",
                    name: eventType.name,
                    color: eventType.color,
                    showInLegend: true,
                    legendText: eventType.name,
                    dataPoints: allEventsEmissions.map(event => {
                        const value = parseFloat(event[eventType.field]) || 0; // Default to 0 if undefined
                        return {
                            label: event.activity,
                            y: value,
                            toolTipContent: `${eventType.name}<br>Activity: ${event.activity}<br>Total Emissions: ${value.toFixed(2)}`
                        };
                    })
                };
            }).filter(series =>
                series.dataPoints.some(point => point.y > 0)  // Keep series with at least one non-zero data point
            );

            var chart = new CanvasJS.Chart("chartContainer", {
                // title: {
                //     text: "Marketing Activity Emissions Comparison",
                //     textDecoderation:"underline",
                //     fontSize: 30,
                //     margin: 30
                // },
                axisY: {
                    title: "Total Emissions (kgCO₂e)",
                    labelFontSize: 20,
                    labelFontColor: "dimGrey"
                },
                axisX: {
                    // title: "Activities",
                    // labelAngle: -30
                },
                data: dataSeries,
                legend: {
                    cursor: "pointer",
                    horizontalAlign: "center",
                    verticalAlign: "top",
                    fontSize: 0,
                    margin: 20
                },
            });

            chart.render(); // Generate the table dynamically

            // Create table header
            let tableHTML = '<table><thead><tr><th>Activity</th>';

            // Track which headers should be added
            const headers = new Set();

            // Determine which headers to include based on available data
            allEventsEmissions.forEach(event => {
                eventTypesMap.forEach(eventType => {
                    if (event[eventType.field] !== undefined && parseFloat(event[eventType.field]) > 0) {
                        headers.add(eventType.name);
                    }
                });
            });

            headers.forEach(header => {
                tableHTML += `<th>${header} Emissions</th>`;
            });
            tableHTML += '</tr></thead><tbody>';

            // Create table rows
            allEventsEmissions.forEach(event => {
                tableHTML += '<tr>';
                tableHTML += `<td>${event.activity}</td>`;
                headers.forEach(header => {
                    const eventType = eventTypesMap.find(type => type.name === header);
                    const value = event[eventType.field] ? parseFloat(event[eventType.field]).toFixed(2) > 0 && parseFloat(event[eventType.field]).toFixed(2) : '';
                    tableHTML += `<td>${value || '-'}</td>`;
                });
                tableHTML += '</tr>';
            });

            tableHTML += '</tbody></table>';

            // Output the table to the div with id 'tableContainer'
            document.getElementById('tableContainer').innerHTML = tableHTML;

        }
    </script>
</head>

<body>
    <h4>Dear <%= name %>,</h4>

    <p>Thank you for using our <strong>NetZero Platform</strong> to measure the carbon footprint generated by
        your <strong>
            <%= activityName %>
        </strong> activity</p>
    <p>We are pleased to provide you with the carbon footprint report, which details the emissions associated with the
        mentioned activity</p>
    <h2 class="chart-title">Marketing Activity Emissions Comparison</h2>

    <div id="chartContainer" style="height: 400px; width: 90%; margin: auto;"></div>

    <div id="tableContainer" class="table-container"></div>

    <p style="margin-top: 30px;">We deeply value your commitment to sustainability and appreciate your proactive
        approach in understanding and mitigating your environmental impact.</p>
    <p>If you have any questions or need further assistance on how to reduce the carbon emissions from your activity,
        please contact us at <a href="mailto:info@sirat.earth">info@sirat.earth</a>.</p>
    <br />
    <p>Best regards,</p>
    <p style="margin-bottom:0; font-weight: bold;">Team Sirāt</p>

</body>


</html> -->